// Лабораторная 1
// Перевести узлы в километры в час и выразить в метрах в секунду
#include <iostream>
#include <Windows.h>

using namespace std;

int main() {

    SetConsoleOutputCP(1251);
    SetConsoleCP(1251);

    cout << "Введите количество узлов:";
    cin >> knots;
    // 1 узел = 1.852 км/ч
    cout << "Ответ." << endl;
    printf("%f км/ч, %f м/с", (float)knots * 1.852, ((float)knots * 1.852 * 1000.0) / 3600.0);

}

// Лабораторная 2
// Написать программу,
// которая вычисляет среднее арифметическое элементов массива без учета минимального и максимального элементов массива.
// Массив и его длина вводятся пользователем.
#include <iostream>
#include <Windows.h>

using namespace std;

int main() {
    
    SetConsoleOutputCP(1251);
    SetConsoleCP(1251);
    
    int charArrayLength;
    cout << "Укажите количество элементов в массиве:";
    cin >> charArrayLength;

    // задание элементов в массив
    int nums[charArrayLength];
    for (int i = 0; i < charArrayLength; i++) {
        cout << "Введите число для элемента №" << i+1 << ":";
        cin >> nums[i];
    }

    // поиск минимального и максимального элемента
    int minElement = nums[0], maxElement = nums[0];
    for (int i = 0; i < charArrayLength; i++) {
        if (nums[i] < minElement) {
            minElement = nums[i];
        }
        if (nums[i] > maxElement) {
            maxElement = nums[i];
        }
    }

    int sum, counter;
    for (int i = 0; i < charArrayLength; i++) {
        if (nums[i] != minElement && nums[i] != maxElement) {
            counter++;
            sum += nums[i];
        }
    }

    cout << "Ответ." << endl << double(sum) / double(counter);
}


// Лабораторная 3
// Написать программу, которая во вводимом с клавиатуры тексте выберет слова, начинающиеся с гласной буквы, и выведет их на экран. 

#include <iostream>
#include <Windows.h>

using namespace std;

int main() {

    SetConsoleOutputCP(1251);
    SetConsoleCP(1251);

    char text[1024];
    cout << "Поддерживаются только русские и английские символы\nДля ввода доступно не более 1024 символов\nВведите текст: ";
    cin.get(text, 1024);
    cout << "Ответ." << endl;
    for (int i = 0; i < 1024; i++) {
        int temp = (int)text[i];
        if (text[i] == '\0') {
            break;
        }
        // -128 --- -97 (А-Я)   65 --- 90 (A-Z)
        if ((temp <= -97 && temp >= -128) || (temp <= 90 && temp >= 65)) {

            while (text[i] != ' ') {

                if (text[i] == '\0') {
                    break;
                }
                cout << text[i];
                i++;
            }

            cout << " ";
        }

        else {
            while (text[i] != ' ') {

                if (text[i] == '\0') {
                    break;
                }
                i++;
                continue;
            }
        }

    }
}







// Лабораторная 4
// Практическую часть к лабораторной работе 4 необходимо взять из лабораторной работы 3, дополнив ее некоторыми условиями:
// • входными данными является файл;
// • результаты работы записываются в другой файл;
// • входные данные не ограничиваются одной строкой.


#include <iostream>
#include <Windows.h>

using namespace std;

void main() {

    SetConsoleOutputCP(1251);
    SetConsoleCP(1251);

    cout << "Поддерживаются только русские и английские символы\nДля ввода доступно не более 1024 символов\nНачинаю сканировать файл...\n";

    FILE* inputFile;
    FILE* outputFile;

    fopen_s(&inputFile, "input.txt", "r");
    fopen_s(&outputFile, "output.txt", "a");

    char* text = new char[1024];

    if (inputFile == NULL || outputFile == NULL) {
        cout << "Ошибка, не найден(ы) файл(ы) для работы программы!";
    }

    else {
        char text[1024];
        while (!feof(inputFile)) {

            
            fscanf_s(inputFile, "%[^\n]\n", text, 1024);


            for (int i = 0, j = 0; i < 1024; i++) {
                if (text[i] == '\0') {
                    break;
                }
                // -128 --- -97 (А-Я)   65 --- 90 (A-Z)
                if (((int)text[i] <= -97 && (int)text[i] >= -128) || ((int)text[i] <= 90 && (int)text[i] >= 65)) {

                    while (text[i] != ' ') {

                        if (text[i] == '\0') {
                            break;
                        }
                        fputc(text[i], outputFile);

                        i++;
                    }
                    fputc(' ', outputFile);

                }

                else {
                    while (text[i] != ' ') {
                        if (text[i] == '\0') {
                            break;
                        }
                        i++;
                        continue;
                    }
                }
            }
            fputc('\n', outputFile);
        }
        cout << "Готово! Результат сохранён в output.txt";
        fclose(outputFile);
        fclose(inputFile);
    }
}





// Лабораторная работа 5.
// Написать программу, которая записывает с клавиатуры в файл структуру согласно выданному варианту задания. 
// В качестве разделителя полей структуры использовать символ табуляции. В программе реализовать:
// а) дополнение существующего массива структур новыми структурами;
// б) поиск структуры с заданным значением выбранного элемента;
// в) вывод на экран содержимого массива структур;
// г) упорядочение массива структур по заданному полю(элементу), например государство по численности.
// «Покупатель»: фамилия, имя, отчество, город, улица, номер дома, номер квартиры, номер кредитной карточки, код покупки. 



#include <iostream>
#include <Windows.h>

using namespace std;

struct Buyer {

    char lastName[32];
    char name[32];
    char patronymic[32];
    char city[32];
    char street[128];
    char creditCardNumber[16];
    int houseNumber;
    int roomNumber;
    int buyCode;

};

void getFileDate() {

    FILE* databaseFile;

    fopen_s(&databaseFile, "database.txt", "r");

    if (databaseFile == NULL) {
        cout << "Ошибка, не найден(ы) файл(ы) для работы программы!";
    } else {
        
    }

        
}

void addNewElement() {
    Buyer buyer = {};

    cout << "Введите фамилию:\n";
    cin.getline(buyer.lastName, 32);
    cin.ignore();

    cout << "Введите имя:\n";
    cin.getline(buyer.name, 32);
    cin.ignore();

    cout << "Введите отчество:\n";
    cin.getline(buyer.patronymic, 32);
    cin.ignore();

    cout << "Введите город:\n";
    cin.getline(buyer.city, 32);
    cin.ignore();

    cout << "Введите улицу:\n";
    cin.getline(buyer.street, 32);
    cin.ignore();

    cout << "Введите номер карточки:\n";
    cin.getline(buyer.creditCardNumber, 16);
    cin.ignore();

    cout << "Введите номер дома:\n";
    cin >> buyer.houseNumber;

    cout << "Введите номер квартиры:\n";
    cin >> buyer.roomNumber;

    cout << "Введите номер покупки:\n";
    cin >> buyer.buyCode;
    cin.ignore();
}

int main() {

    SetConsoleOutputCP(1251);
    SetConsoleCP(1251);

    while (true) {

        int action;
        cout << "Выберите действие:\n1) Вывести содержимое базы данных\n2) Добавить новый элемент в базу данных\n3) Отсортировать элементы по определённому параметру\n";
        cin >> action;

        switch (action) {
            case 1:
                addNewElement();
                break;
            default:
                cout << "Действие не найдено!\n";
                break;
        }

    }
}
